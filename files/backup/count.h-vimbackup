// This project is powered by tencent ncnn.

// Author: Peng Jin
// Contact: 871461071 at qq.com
// Organization: www.oetlink.com


// Version: omit...

// Version: 0.21
// Date: 2018/12/11
// Description: change from ncnn to Tengine and add head-track-dot

// Version: omit...

// Version: 0.5
// Date: 2019/3/27
// Description: change from Tengine count_version 0.43 to ncnn, two thread, image detect

// Version: 0.51
// Date: 2019/3/29
// Description: video detect

// Version: 0.52
// Date: 2019/3/29
// Description: passenger count


#ifndef COUNT_H
#define COUNT_H


#include <vector>
#include <math.h>
#include <stdlib.h>
#include <iostream>
using namespace std;


struct Object
{
	int		label = 0;			//0:background,1:ShortHair,2:LongHair,3:Hat
	float	prob = 0;			//probability, 0~1
	float	left_top_x = 0;		//Rect
	float	left_top_y = 0;		//Rect
	float	right_bottom_x = 0;	//Rect
	float	right_bottom_y = 0;	//Rect
	float	width = 0;			//Rect
	float	height = 0;			//Rect
	float	center_x = 0;		//Circle
	float	center_y = 0;		//Circle
	float	radius = 0;			//Circle
};


struct Track
{
	int	track_type = 0;		//1:matching 2:valid 3:invalid
	int	total_frame = 0;
	int	time_to_death = 10;
	int	target_lost_frame = 0;  	//target_lost_frame=total_frame-head_count,and set to 0 when a new head matches this track
	bool	new_head_match = false;
	vector<Object> heads_in_this_track;
};

class Count
{
public:
	int		total_frame;		//total frame
	int		in_total;			//in_people
	int		out_total;			//out_people
	float	detect_thre;		//detect threshold
	float	distance_thre;		//to judge if two heads belong to one track
	int		lost_frame_thre;	//to judge if a track need to be delete
	float	y_thre_in;			//track distance of in people
	float	y_thre_out;			//track distance of out people
	bool	match_track;		//false: can not match any track, true: can match
	int		match_track_ID;		//0~n:matched track ID
	int		track_ID;			//0~n:track ID in all tracks
	float	match_distance;		//the min distance to all matched tracks

	//for output file:
	bool	people_change;		//if in and out people changed in this frame
	int		in_door_time;		//in people in this door time
	int		out_door_time;		//out people in this door time
	int		frames_to_close;	//frames to in_out people not changed

	//for video record
	bool	people_detected;	//if people detected in this frame
	int		frames_to_people_gone;	//frames to people not detected any more


	vector<Track> tracks;		//v_0.29:matching/valid/invalid all in one

	// empty init
	Count();

	// clear and destroy
	~Count();

	//function: passenger_count
	//input: detect results
	//output: in_people, out_people in Count class
	void passenger_count(vector<Object> &objects);


	float get_distance(int x1, int y1, int x2, int y2);
	int float_to_int(float f);
};

#endif  // COUNT_H
