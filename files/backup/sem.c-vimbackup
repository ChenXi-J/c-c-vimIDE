#include <sys/sem.h>
#include <stdio.h>

#include "sem.h"


int sem_init(int *semid, key_t key)
{
	union semun sem_union;

	*semid = semget(key, 1,IPC_CREAT|0666);

	sem_union.val = 0;
	if(semctl(*semid, 0, SETVAL, sem_union) == -1)
	{
		return 0;
	}
	return 1;

}

int sem_p(int semid)
{
	struct sembuf sem_b;
	sem_b.sem_num = 0;
	sem_b.sem_op = -1;
	sem_b.sem_flg = 0;//SEM_UNDO 多进程undo 超过返回会报错

	if(semop(semid, &sem_b, 1) == -1)
	{
		perror("semop p failed\n");
		return -1;
	}

	return 0;
}

int sem_v(int semid)
{
	struct sembuf sem_b;
	sem_b.sem_num = 0;
	sem_b.sem_op = 1;
	sem_b.sem_flg = 0;//SEM_UNDO;

	if(semop(semid, &sem_b, 1) == -1)
	{
		perror("semop v failed\n");
		return -1;
	}

	return 0;
}

void sem_del(int semid)
{
	union semun sem_union;
	if(semctl(semid, 0, IPC_RMID, sem_union) ==	-1)
	{
		perror("sem del fail\n");
	}
}
