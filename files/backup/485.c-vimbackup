#include <stdio.h>
#include <string.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <stropts.h>
#include <asm/ioctl.h>
#include <stdint.h>
#include <arpa/inet.h>

#define CTRL_MAGIC			't'
#define CTRL_ON_ALL_CMD				_IOW(CTRL_MAGIC, 0x00, int)
#define CTRL_OFF_ALL_CMD			_IOW(CTRL_MAGIC, 0xff, int)
#define CTRL_ENABLE_CAMMERA_CMD		_IOW(CTRL_MAGIC, 0x01, int)
#define CTRL_DISABLE_CAMMERA_CMD	_IOW(CTRL_MAGIC, 0x02, int)
#define CTRL_RESET_GPS_CMD			_IOW(CTRL_MAGIC, 0x03, int)

#define CTRL_ACC_INTTIME_CMD		_IOW(CTRL_MAGIC, 0x04, int)
#define CTRL_DOOR_INTTIME_CMD		_IOW(CTRL_MAGIC, 0x05, int)
#define CTRL_SIMCH_INTTIME_CMD		_IOW(CTRL_MAGIC, 0x06, int)

#define CTRL_485_RECV_CMD			_IOW(CTRL_MAGIC, 0x07, int)
#define CTRL_485_SEND_CMD			_IOW(CTRL_MAGIC, 0x08, int)


void Crc16(unsigned char frame[], unsigned char length) {

	unsigned int crc16 = 0xffff;
	unsigned char byteIndex, n;
	for (byteIndex = 0; byteIndex < length - 2; byteIndex++)  {
		crc16 ^= frame[byteIndex];
		for (n = 0; n < 8; n++) {
			if (crc16 & 1) {
				crc16 >>= 1;
				crc16 ^= 0xA001;
			} else {
				crc16 >>= 1;
			}
		}
	}
	frame[length - 2] = crc16;
	frame[length - 1] = crc16 >> 8;
}

void uart485_recvMode(int fd)
{
	ioctl(fd, CTRL_485_RECV_CMD);
}

void uart485_sendMode(int fd)
{
	ioctl(fd, CTRL_485_SEND_CMD);
}

void uart485_send(int fd, unsigned char *buf, unsigned int len)
{
	write(fd, buf,len);
}
//00 06 01 34 00 0C C8 2C
unsigned int uart485_packUp(unsigned char *buf,uint16_t num)
{
	unsigned int len = 0;
	num = htons(num);
	buf[len++] = 0x00;
	buf[len++] = 0x06;
	buf[len++] = 0x01;
	buf[len++] = 0x34;

	memcpy(buf+len, &num,2);
	len+= 2;

	Crc16(buf,len+2);
	len+=2;

	return len;
}

unsigned int uart485_packDown(unsigned char *buf,uint16_t num)
{
	unsigned int len = 0;
	num = htons(num);
	buf[len++] = 0x00;
	buf[len++] = 0x06;
	buf[len++] = 0x01;
	buf[len++] = 0xfc;

	memcpy(buf+len, &num,2);
	len+= 2;

	Crc16(buf,len+2);
	len+=2;

	return len;
}

unsigned int uart485_packNub(unsigned char *buf,uint16_t num)
{
	unsigned int len = 0;
	num = htons(num);
	buf[len++] = 0x00;
	buf[len++] = 0x06;
	buf[len++] = 0x02;
	buf[len++] = 0xc4;

	memcpy(buf+len, &num,2);
	len+= 2;

	Crc16(buf,len+2);
	len+=2;

	return len;
}

int main(void)
{
	unsigned char sendbuf[128];
	unsigned int sendlen = 0;
	unsigned char recvbuf[128];
	unsigned int recvlen = 0;

	uint16_t people[2] = {0,0} ;

	int fd=open("/dev/ttyUSB1",O_RDWR);
	//uart485_sendMode(fd);
	while(1)
	{
		people[0] += 4;
		people[1] += 8;
		sendlen = uart485_packUp(sendbuf,people[0]);
		for(int i = 0; i<sendlen ;i++)
		{
			printf("%02x ",sendbuf[i]);
		}
		printf("\n");
		uart485_send(fd,sendbuf,sendlen);

		usleep(100000);
		sendlen = uart485_packDown(sendbuf,people[1]);
		for(int i = 0; i<sendlen ;i++)
		{
			printf("%02x ",sendbuf[i]);
		}
		printf("\n");
		uart485_send(fd,sendbuf,sendlen);

		usleep(100000);
		sendlen = uart485_packNub(sendbuf,people[0]-people[1]);
		for(int i = 0; i<sendlen ;i++)
		{
			printf("%02x ",sendbuf[i]);
		}
		printf("\n");
		uart485_send(fd,sendbuf,sendlen);

		usleep(100000);
	}
	close(fd);

	return 0;
}
